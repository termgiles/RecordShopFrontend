<h3>PostConfirm</h3>

@code {
    public Album updatedAlbum;

    private bool success;

    [Parameter]
    public int Id { get; set; } = 3; //3 for testing

    [Parameter]
    public  AlbumModification modification { get; set; }


    [Parameter]
    public EventCallback<AlbumModification> RenderUpdates { get; set; }

    private async Task InvokeShowSubmitted(Album updatedAlbum)
    {
        AlbumModification returnedUpdates= new AlbumModification {Name = updatedAlbum.Name,
                                                                       Artist = updatedAlbum.Artist,
                                                                       Released = updatedAlbum.Released,
                                                                       Genre = updatedAlbum.Genre,
                                                                       Information = updatedAlbum.Information};
        await RenderUpdates.InvokeAsync(returnedUpdates);
    }

    //request

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var http = new HttpClient();
            HttpResponseMessage response; 

            response = await http.PutAsJsonAsync<AlbumModification>(
            $"https://localhost:7283/RecordShop/Album/557897180", modification);

            updatedAlbum = await response.Content.ReadFromJsonAsync<Album>() ?? new Album();
            success = (updatedAlbum.Id != null) ? true : false;
            await InvokeShowSubmitted(updatedAlbum);
        }
        catch (Exception ex)
        {
            success = false;
            string errorMessage = $"An error occurred: {ex.Message}";
        }
    }

}
//html
@if(success)
{
    <div id="successBlock" class="block has-background-success" syle="display: inline-block">Database updated</div>
}
else
{
    <div id="successBlock" class="block has-background-danger" syle="display: inline-block">Databse not updated</div>
}


