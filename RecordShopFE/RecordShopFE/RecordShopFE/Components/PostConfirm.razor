@code {
    public Album newAlbum;

    private bool success;

    [Parameter]
    public AlbumModification modification { get; set; }


    [Parameter]
    public EventCallback<Album> RenderUpdates { get; set; }

    private async Task InvokeShowSubmitted(Album createdAlbum)
    {
        await RenderUpdates.InvokeAsync(createdAlbum);
    }

   

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var http = new HttpClient();

            var response = await http.PostAsJsonAsync<AlbumModification>(
            "https://localhost:7283/RecordShop/Album", modification);

            newAlbum = await response.Content.ReadFromJsonAsync<Album>() ?? new Album();
            success = (newAlbum.Id != null) ? true : false;
            await InvokeShowSubmitted(newAlbum);
        }
        catch (Exception ex)
        {
            success = false;
            string errorMessage = $"An error occurred: {ex.Message}";
        }
    }

}


@if (success)
{
    <div id="successBlock" class="block has-background-success" syle="display: inline-block">Database updated</div>
}
else
{
    <div id="successBlock" class="block has-background-danger" syle="display: inline-block">Databse not updated</div>
}
